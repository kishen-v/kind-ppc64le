diff --git a/images/Makefile.common.in b/images/Makefile.common.in
index 821d9c53..914f26ef 100644
--- a/images/Makefile.common.in
+++ b/images/Makefile.common.in
@@ -31,7 +31,7 @@ GO_VERSION=$(shell cat $(CURDIR)/../../.go-version | head -n1)
 export DOCKER_CLI_EXPERIMENTAL=enabled

 # build with buildx
-PLATFORMS?=linux/amd64,linux/arm64
+PLATFORMS?=linux/amd64,linux/ppc64le
 OUTPUT?=
 PROGRESS=auto
 EXTRA_BUILD_OPT?=
diff --git a/images/base/Dockerfile b/images/base/Dockerfile
index e9440cb1..99d47313 100644
--- a/images/base/Dockerfile
+++ b/images/base/Dockerfile
@@ -108,10 +108,10 @@ COPY --chmod=0755 scripts/third_party/gimme/gimme /usr/local/bin/
 COPY --chmod=0755 scripts/target-cc /usr/local/bin/
 # tools needed at build-time only
 # first ensure we can install packages for both architectures
-RUN dpkg --add-architecture arm64 && dpkg --add-architecture amd64 \
+RUN dpkg --add-architecture amd64 && dpkg --add-architecture ppc64el \
     && clean-install bash ca-certificates curl git make pkg-config \
-    crossbuild-essential-amd64 crossbuild-essential-arm64 \
-    libseccomp-dev:amd64 libseccomp-dev:arm64
+    crossbuild-essential-amd64 crossbuild-essential-ppc64el \
+    libseccomp-dev:amd64 libseccomp-dev:ppc64el
 # set by makefile to .go-version
 ARG GO_VERSION
 RUN eval "$(gimme "${GO_VERSION}")" \
diff --git a/images/base/scripts/target-cc b/images/base/scripts/target-cc
index f8226e15..dc9980f1 100755
--- a/images/base/scripts/target-cc
+++ b/images/base/scripts/target-cc
@@ -23,6 +23,8 @@ case $TARGETARCH in
     echo -n 'aarch64-linux-gnu-gcc' ;;
   amd64)
     echo -n 'x86_64-linux-gnu-gcc' ;;
+  ppc64le)
+    echo -n 'powerpc64le-linux-gnu-gcc' ;;
   *)
     exit 1 ;;
 esac
diff --git a/pkg/build/nodeimage/const_cni.go b/pkg/build/nodeimage/const_cni.go
index 480dc6a1..af471836 100644
--- a/pkg/build/nodeimage/const_cni.go
+++ b/pkg/build/nodeimage/const_cni.go
@@ -20,7 +20,7 @@ package nodeimage
 The default CNI manifest and images are our own tiny kindnet
 */

-const kindnetdImage = "docker.io/kindest/kindnetd:v20240202-8f1494ea"
+const kindnetdImage = "quay.io/kviswana/kindnetd:latest"

 var defaultCNIImages = []string{kindnetdImage}

diff --git a/pkg/build/nodeimage/const_storage.go b/pkg/build/nodeimage/const_storage.go
index a45313b8..08851bfe 100644
--- a/pkg/build/nodeimage/const_storage.go
+++ b/pkg/build/nodeimage/const_storage.go
@@ -25,8 +25,8 @@ NOTE: we have customized it in the following ways:
 - install as the default storage class
 */

-const storageProvisionerImage = "docker.io/kindest/local-path-provisioner:v20240202-8f1494ea"
-const storageHelperImage = "docker.io/kindest/local-path-helper:v20230510-486859a6"
+const storageProvisionerImage = "quay.io/kviswana/local-path-provisioner:latest"
+const storageHelperImage = "quay.io/kviswana/local-path-helper:latest"

 // image we need to preload
 var defaultStorageImages = []string{storageProvisionerImage, storageHelperImage}
diff --git a/pkg/build/nodeimage/defaults.go b/pkg/build/nodeimage/defaults.go
index 5e8d0896..b1740a3f 100644
--- a/pkg/build/nodeimage/defaults.go
+++ b/pkg/build/nodeimage/defaults.go
@@ -22,4 +22,4 @@ const DefaultImage = "kindest/node:latest"
 // DefaultBaseImage is the default base image used
 // TODO: come up with a reasonable solution to digest pinning
 // https://github.com/moby/moby/issues/43188
-const DefaultBaseImage = "docker.io/kindest/base:v20240212-c4cadcab"
+const DefaultBaseImage = "quay.io/kviswana/base:latest"
diff --git a/pkg/cluster/internal/loadbalancer/const.go b/pkg/cluster/internal/loadbalancer/const.go
index 3600b338..ba967d7a 100644
--- a/pkg/cluster/internal/loadbalancer/const.go
+++ b/pkg/cluster/internal/loadbalancer/const.go
@@ -17,7 +17,7 @@ limitations under the License.
 package loadbalancer

 // Image defines the loadbalancer image:tag
-const Image = "docker.io/kindest/haproxy:v20230606-42a2262b"
+const Image = "quay.io/kvisawna/haproxy:latest"

 // ConfigPath defines the path to the config file in the image
 const ConfigPath = "/usr/local/etc/haproxy/haproxy.cfg"
